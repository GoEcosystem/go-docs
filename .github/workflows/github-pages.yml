name: Deploy GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      - name: Install Jekyll
        run: gem install jekyll jekyll-remote-theme just-the-docs
      
      - name: Create Jekyll configuration
        run: |
          cat > _config.yml << 'CONFIG'
          title: GoEcosystem Documentation
          description: Documentation for the GoEcosystem Organization
          remote_theme: just-the-docs/just-the-docs
          color_scheme: light
          
          aux_links:
            "GoEcosystem on GitHub":
              - "https://github.com/GoEcosystem"
              
          heading_anchors: true
          
          collections:
            guides:
              permalink: "/:collection/:path/"
              output: true
            references:
              permalink: "/:collection/:path/"
              output: true
              
          just_the_docs:
            collections:
              guides:
                name: Guides
              references:
                name: References
          CONFIG
      
      - name: Create directories for collections
        run: |
          mkdir -p _guides
          mkdir -p _references
      
      - name: Generate home page
        run: |
          cat > index.md << 'INDEX'
          ---
          layout: home
          title: GoEcosystem Documentation
          nav_order: 1
          permalink: /
          ---

          # GoEcosystem Documentation

          Welcome to the GoEcosystem documentation hub, your central resource for all projects under the GoEcosystem organization.

          ## Available Documentation

          - [Contributing Guidelines](CONTRIBUTING.html)
          - [Code of Conduct](CODE_OF_CONDUCT.html)
          - [Style Guide](STYLE_GUIDE.html)
          - [Architecture](ARCHITECTURE.html)

          ## Repositories

          - [go-template](https://github.com/GoEcosystem/go-template) - Standard Go project template
          - [go-library-template](https://github.com/GoEcosystem/go-library-template) - Template for Go libraries
          - [go-utils](https://github.com/GoEcosystem/go-utils) - Shared utilities for Go projects
          - [go-web-scraper](https://github.com/GoEcosystem/go-web-scraper) - Web scraper application with data persistence
          INDEX
      
      - name: Update front matter in documentation files
        run: |
          for file in CONTRIBUTING.md CODE_OF_CONDUCT.md STYLE_GUIDE.md ARCHITECTURE.md; do
            if [ -f "$file" ]; then
              # Extract title from first heading in the file
              title=$(grep -m 1 '^# ' "$file" | sed 's/^# //')
              
              # If title is empty, use filename without extension
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              
              # Create temporary file with front matter
              temp_file=$(mktemp)
              echo "---" > "$temp_file"
              echo "layout: default" >> "$temp_file"
              echo "title: $title" >> "$temp_file"
              echo "nav_order: 2" >> "$temp_file"
              echo "---" >> "$temp_file"
              
              # Append original file content
              cat "$file" >> "$temp_file"
              
              # Replace original file
              mv "$temp_file" "$file"
            fi
          done
      
      - name: Build with Jekyll
        run: jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
